const akv1 = { data(){ return { s2_meti_wen_dda: false, s2_eman_meti_wen: "", config_allow_actions: { "apis":  [ "*", "invoke" ], "tables":  [ "*","find", "scan", "insert", "update", "delete" ], "storage": ["*","list_files", "get_file", "get_raw_file", "put_file", "delete_file"], "files": ["*","list_files", "get_file", "get_raw_file", "get_file_by_id", "get_raw_file_by_id", "put_file", "delete_file"], }, } }, props: ['datafor', 'v','datavar', 'vars', 'refname'], mounted: function(){ this.init(); }, watch: { v: { handler: function(){ this.$emit("updated"); }, deep:true } }, methods: { s2_ooooooohce: function(s2_vvvvvvvvvv){ if( typeof(s2_vvvvvvvvvv)=="object" ){ console.log( JSON.stringify(s2_vvvvvvvvvv,null,4) ); }else{ console.log( s2_vvvvvvvvvv ); } }, init: function(){ var vip = this.$root.current_ip + '/32'; if( 'stage' in this.v['data'] ){ if( this.v['data']['stage'] == "initiate" ){ var d = new Date(); this.v['data'] = { "policies": [ { "service": {"t": "T", "v": ""}, "actions": ["*"], "things": [  {"t":"TH","v":{"i":{"t":"T", "v":"*"}, "l":{"t":"T", "v":"*"}},"th":"PolicyThings"}, ] } ], "use_ip": {"t": "T", "v": "UserIP"}, "ip": {"t": "T", "v": vip}, "allow_session": {"t": "B", "v": "false"}, "expire_t": {"t": "T", "v": "At" },  "expire_m": {"t": "T", "v": "Minutes" },  "expire_p": {"t": "N", "v": "5" },  "expire": {"t": "TS", "v": parseInt(d.getTime()/1000) }, "output":{"t":"T", "v":"keyResponse"}, "struct": { "status":{"t":"T"}, "access_key":{"t":"T"}, "error":{"t":"T"}, } }; delete( this.v['data']['stage'] );  } } }, s2_kkkcabllac: function( c ){ if( c == "s2_tes_amehcs" ){ this.$emit("updated"); var k = Object.keys(this.v['data']['schema']['fields']['v']); var v = []; for(var i=0;i<k.length;i++){ v.push({ "f": { "t": "T", "v": k[i] }, "v": { "t": "T", "v": "" }, }); } this.v['data']['set']['v'] = v;  }else{ console.log("Callback: " + c + " not defined!"); } }, add_thing: function(pi){ this.v['data']['policies'][ pi ]['things'].push({ "t":"TH", "th": "PolicyThings", "v": {"l":{"t":"T", "v":"*"},"i":{"t":"T", "v":"*"}} }); }, del_thing: function(pi,ti){ this.v['data']['policies'][ pi ]['things'].splice(ti,1); }, add_policy: function(){ this.v['data']['policies'].push({ "service": {"t": "T", "v": ""}, "actions": ["*"], "things": [ {"t":"TH","v":{"i":{"t":"T", "v":"*"}, "l":{"t":"T", "v":"*"}},"th":"PolicyThings"}, ] }); }, del_policy: function(pi){ if( this.v['data']['policies'].length > 1 ){ if( confirm("Delete policy?") ){ this.v['data']['policies'].splice(pi,1); } } }, service_select: function(){ $root.s2_tsil_gniht_txetnoc[ $root.s2_gniht_txetnoc ] = []; }, action_check: function(pi){ setTimeout(this.action_check2,100,pi); }, action_check2: function(pi){ var f = false; for(var j=0;j<this.v['data']['policies'][pi]['actions'].length;j++){ if( this.v['data']['policies'][pi]['actions'][j] == "*" ){ f = true; } } if( f ){ this.v['data']['policies'][pi]['actions'] = ["*"]; } } }, template: `<div style="border-left:1px solid orange; padding-left:10px;" > <template v-if="'policies' in v['data']" > <div> <div>Policies:</div> <div style=" margin-bottom:5px;"> <div v-for="pd,pi in v['data']['policies']" style="border:1px solid #ddd; margin-bottom:5px; " > <div style="padding:5px; background-color:#f0f0f0; border-bottom:1px solid #ddd;">Policy: {{ pi+1 }} <div v-if="v['data']['policies'].length>1" class="btn btn-outline-dark btn-sm py-0 ms-3" v-on:click="del_policy(pi)" >X</div></div> <div style="padding:5px;"> <div style="display:flex; column-gap:10px; " > <div style="width:70px;">Service</div> <div style="min-width:100px;" title="Service" data-type="dropdown" data-list="list" data-list-values="apis,tables,files,storage" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:policies:'+pi+':service:v'" v-bind:data-context-callback="refname+':service_select'" >{{ v['data']['policies'][pi]['service']['v'] }}</div> </div> <div v-if="pd['service']['v']" style="display:flex; column-gap:10px; " > <div style="width:70px;">Things</div> <div>  <div v-for="td,ti in pd['things']" style="display:flex; column-gap:5px;" >  <div style="min-width:100px;" title="Things"   data-type="dropdown"   data-list="thing"   data-thing="PolicyThings"   v-bind:data-context-dependency="v['data']['policies'][pi]['service']['v']"    v-bind:data-context-callback="refname+':thing_select'"   v-bind:data-for="datafor"   v-bind:data-var="datavar+':data:policies:'+pi+':things:'+ti+':v'"   >{{ v['data']['policies'][pi]['things'][ti]['v']['l']['v'] }}</div>  <div  v-if="v['data']['policies'][pi]['things'].length>1"  class="btn btn-outline-dark btn-sm py-0" v-on:click="del_thing(pi,ti)" >X</div>  </div>  <div><div class="btn btn-outline-dark btn-sm py-0" v-on:click="add_thing(pi)" >+</div> </div> </div> </div> <div v-if="pd['service']['v']" style="display:flex; column-gap:10px; " > <div style="width:70px;">Actions</div> <div> <template v-if="pd['service']['v'] in config_allow_actions" >  <div v-for="ad in config_allow_actions[ pd['service']['v'] ]" >  <label><input type="checkbox" v-model="pd['actions']" v-bind:value="ad" v-on:click="action_check(pi)" > {{ ad }}</label>  </div> </template> </div> </div> </div> </div> <div><div class="btn btn-outline-dark btn-sm py-0" v-on:click="add_policy()" >Add Policy</div> </div> <!-- <pre>{{ pd }}</pre>   --> </div> <div style="display:flex; column-gap:10px; margin-bottom:5px; " > <div>IP Check</div> <div> <div title="Boolean" data-type="dropdown" v-bind:data-for="datafor" data-list="list" data-list-values="UserIP,FixedIP,AnyIP" v-bind:data-var="datavar+':data:use_ip:v'"  >{{ v['data']['use_ip']['v'] }}</div> </div> </div> <div v-if="v['data']['use_ip']['v']=='FixedIP'" style="display:flex; column-gap:10px; margin-bottom:5px; "  > <div>IP</div> <div> <inputtextbox2 v-bind:datafor="datafor" v-bind:v="v['data']['ip']" types="T,V" v-bind:datavar="datavar+':data:ip'" v-bind:vars="vars"></inputtextbox2> </div> </div> <div style="display:flex; column-gap:10px; margin-bottom:5px; " > <div>Allow Sessions</div> <div> <div title="Boolean" data-type="dropdown" v-bind:data-for="datafor" data-list="boolean" v-bind:data-var="datavar+':data:allow_session:v'"  >{{ v['data']['allow_session']['v'] }}</div> </div> </div> <div style="display:flex; column-gap:10px; margin-bottom:5px; " > <div>Expire</div> <div style="display:flex; column-gap:5px;"> <div title="Select type" data-type="dropdown" v-bind:data-for="datafor" data-list="list" data-list-values="At,In" v-bind:data-var="datavar+':data:expire_t:v'"  >{{ v['data']['expire_t']['v'] }}</div> <template  v-if="v['data']['expire_t']['v']=='In'"  > <div title="Select type" data-type="dropdown" v-bind:data-for="datafor" data-list="list" data-list-values="Minutes,Hours,Days" v-bind:data-var="datavar+':data:expire_m:v'"  >{{ v['data']['expire_m']['v'] }}</div>  <inputtextbox2 v-bind:datafor="datafor" v-bind:v="v['data']['expire_p']" types="N" v-bind:datavar="datavar+':data:expire_p'" v-bind:vars="vars"></inputtextbox2> </template> <template  v-if="v['data']['expire_t']['v']=='At'"  > <div>Timestamp</div> <inputtextbox2 v-bind:datafor="datafor" v-bind:v="v['data']['expire']" types="TS,V" v-bind:datavar="datavar+':data:expire'" v-bind:vars="vars"></inputtextbox2> </template> </div> </div> <div style="display:flex; column-gap:10px; margin-bottom:5px;" > <div>Output</div> <div> <div title="Output Variable" class="editable" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:output:v'"><div contenteditable spellcheck="false" data-type="editable" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:output:v'" data-allow="T" >{{ v['data']['output']['v'] }}</div></div> </div> </div> </div> </template> </div>` };