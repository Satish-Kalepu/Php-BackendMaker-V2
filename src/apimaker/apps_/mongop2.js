const mongop2 =  { data(){ return { s2_meti_wen_dda: false, s2_eman_meti_wen: "", s2_sdleif_lla: false, } }, props: ['datafor', 'v','datavar', 'rootdata', 'refname', 'vars'], mounted: function(){ if( typeof(this.v) != "object" ){ this.v = []; }else if( "length" in this.v == false ){ this.v = []; } }, methods: { s2_ooooooohce: function(s2_vvvvvvvvvv){ if( typeof(s2_vvvvvvvvvv)=="object" ){ console.log( JSON.stringify(s2_vvvvvvvvvv,null,4) ); }else{ console.log( s2_vvvvvvvvvv ); } }, s2_od_sdleif_lla: function(){ setTimeout(this.s2_2od_sdleif_lla,100); }, s2_2od_sdleif_lla: function(){ console.log( this.s2_sdleif_lla ); if( this.s2_sdleif_lla == true ){ this.v.splice(0,100); } }, s2_ttttttidda: function(){ this.v.push({ "f":{"t":"T", "v":""}, "v":{"t":"N", "v":"1"} }); this.s2_eman_meti_wen = ""; this.s2_meti_wen_dda = false; this.s2_sdleif_lla = false; }, s2_edoneteled: function( k, e ){ if( e.ctrlkey ){this.v.splice(k,1);} else if( confirm("are you sure?\nctrl+click to avoid prompt") ){this.v.splice(k,1);} if( this.v.length == 0 ){ this.s2_sdleif_lla = true; } }, s2_kkkcabllac: function( c ){ this.s2_ooooooohce( "s2_kkkcabllac: "+ c ); }, s2_tsil_eraperp: function(){ var vv = []; if( typeof(this.rootdata)=="object" ){ if( 'data' in this.rootdata ){ if( 'schema' in this.rootdata['data'] ){ if( 'fields' in this.rootdata['data']['schema'] ){ vv = this.s2_tsil_sdleif_ot_tcejbo(this.rootdata['data']['schema']['fields']['v']); } } } } this.$root.s2_atad_labolg['list2'] = vv; }, s2_tsil_sdleif_ot_tcejbo: function(v, vp =""){ var vv = []; for( var k in v ){ if( 'type' in v[k] ){ vv.push({"k":vp+k+'',"t":v[k]['type']}); if( v[k]['type'] == "dict" ){ var d = this.s2_tsil_sdleif_ot_tcejbo( v[k]['sub'], vp + k + "->" ); for(var j=0;j<d.length;j++){ vv.push(d[j]); } } }} return vv; } }, template: `<div> <div>{</div> <div v-if="typeof(v)!='object'||v==undefined||v==null" style="margin-left:30px;">vobject error</div> <div v-else style="margin-left:10px;"> <div v-for="vd,vkey in v" style="display:flex; margin-bottom:5px;" > <div><input type="button" class="btn btn-outline-danger btn-sm me-2" style="padding:0px 5px;" value="X" v-on:click="s2_edoneteled(vkey,$event)" ></div> <template v-if="'f' in vd&&'v' in vd" > <div style="display:flex;align-self:flex-start;"> <div title="Fields" data-type="dropdown" data-list="list2" v-bind:data-list-values="list2" v-bind:data-for="datafor" v-bind:data-var="datavar+':'+vkey+':f:v'" v-on:click="s2_tsil_eraperp" >{{ vd['f']['v'] }}</div> </div> <div>&nbsp;:&nbsp;&nbsp;</div> <div style="display:flex;align-self:flex-start;"> <div title="Include/Exclude" data-type="dropdown" data-list="list" data-list-values="1,-1" v-bind:data-for="datafor" v-bind:data-var="datavar+':'+vkey+':v:v'" >{{ vd['v']['v'] }}</div> </div> </template> <div v-else>Incorrect</div> </div> <div><input class="btn btn-outline-dark btn-sm" style="padding:0px 5px;" type='button' v-on:click="s2_ttttttidda" value='+'></div> </div> <div>}</div> </div>` };