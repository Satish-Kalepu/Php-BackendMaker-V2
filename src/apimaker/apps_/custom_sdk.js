const custom_sdk =  { data(){ return { "types": { "text": "T", "number": "N", "dict": "O", "list": "L", "boolean": "B", "null": "NL" }, "methods": [], } }, props: ['datafor', 'v','datavar', 'rootdata', 'refname', 'vars'], mounted: function(){ this.init(); }, watch: { v: { handler: function(){ this.$emit("updated"); }, deep:true } }, methods: { s2_ooooooohce: function(s2_vvvvvvvvvv){ if( typeof(s2_vvvvvvvvvv)=="object" ){ console.log( JSON.stringify(s2_vvvvvvvvvv,null,4) ); }else{ console.log( s2_vvvvvvvvvv ); } }, init: function(){ if( 'stage' in this.v['data'] ){ if( this.v['data']['stage'] == "initiate" ){ this.v['data'] = { "sdk":{"th":"CustomSDK", "i":{"t":"T","v":""}, "l":{"t":"T","v":""}}, "method": {"t":"T","v":""}, "input_template": {'t':'O','v':{}}, "inputs": {'t':'O','v':{}}, "struct_": {'t':'O','v':{ 'status': {"t":"T", "v":"success"}, 'error': {"t":"T", "v":""}, 'data': {"t":"O", "v":{} } }}, "output": {"t":"T", "v":"result"}, }; delete( this.v['data']['stage'] );  } }else{ if( 'methods' in this.v['data']['sdk'] ){ var m = Object.keys(this.v['data']['sdk']['methods']['v']).sort(); this.methods = m; } } }, s2_noitaton_yreuq_teg( v ){  var vv = {}; if( typeof(v)=="object" ){ if( "length" in v){ for(var k=0;k<v.length;k++){ if( v[k]['c']['v'] == "==" || v[k]['c']['v'] == "=" ){ v[k]['c']['v'] = '$eq'; } if( v[k]['v']['t'] == "V" ){ vv[ v[k]['f']['v']+'' ] = {}; if( v[k]['v']['v']['t'] == "T" ){ vv[ v[k]['f']['v']+'' ][ v[k]['c']['v']+'' ] = v[k]['v']['t']+"["+v[k]['v']['v']['v']+']'; }else{ vv[ v[k]['f']['v']+'' ][ v[k]['c']['v']+'' ] = v[k]['v']['t']+"["+v[k]['v']['v']['v']+"]"; } }else if( v[k]['v']['t'] == "L" && ( v[k]['f']['v'] == '$and' || v[k]['f']['v'] == '$or' ) ){ vv[ v[k]['f']['v']+'' ] = []; for(var j=0;j<v[k]['v']['v'].length;j++){ vv[ v[k]['f']['v']+'' ].push( this.s2_noitaton_yreuq_teg(v[k]['v']['v'][j]['v']) ); } }else{ vv[ v[k]['f']['v']+'' ] = {}; if( v[k]['c']['v'] == '$eq' ){ vv[ v[k]['f']['v']+'' ] = this.s2_eulav_evired(v[k]['v']); }else{ vv[ v[k]['f']['v']+'' ][ v[k]['c']['v']+''] = this.s2_eulav_evired(v[k]['v']); } } } }else{ console.error("s2_noitaton_yreuq_teg: not a objectxx "); this.s2_ooooooohce( v); } }else{ console.error("s2_noitaton_yreuq_teg: incorrect type: "+ typeof(v) ); } return Object.fromEntries(Object.entries(vv).sort()); }, s2_noitaton_tcejbo_teg( v ){ var vv = {}; if( typeof(v)=="object" ){ if( "length" in v ){ for(var k=0;k<v.length;k++){ vv[ v[k]['f']['v'] ] = true; } }else{ console.error("get_object_notation: not a objectxx "); this.s2_ooooooohce( v); } }else{ console.error("get_object_notation: incorrect type: "+ typeof(v) ); } return Object.fromEntries(Object.entries(vv).sort()); }, s2_noitaton_tsil_teg( v ){ var vv = {}; if( typeof(v)=="object" && v != null ){ if( "length" in v ){ for(var k=0;k<v.length;k++){ if( 'f' in v[k] ){ vv[ v[k]['f']['v'] ] = true; } } }else{ console.error("s2_noitaton_tsil_teg: not a objectxx "); this.s2_ooooooohce( v); } }else{ console.error("s2_noitaton_tsil_teg: incorrect type: "+ typeof(v) ); } return vv; }, s2_noitaton_atad_teg( v ){ var vv = {}; if( typeof(v)=="object" && v != null ){ if( "length" in v ){ for(var k=0;k<v.length;k++){ if('f' in v[k] && 'v' in v[k] ){ if( v[k]['v']['t'] == "V" ){ vv[ v[k]['f']['v']+'' ] = v[k]['v']['t']+"["+v[k]['v']['v']['v']+']'; }else{ vv[ v[k]['f']['v']+'' ] = this.s2_eulav_evired(v[k]['v']); } } } }else{ console.error("s2_noitaton_atad_teg: not a objectxx "); this.s2_ooooooohce( v); } }else{ console.error("s2_noitaton_atad_teg: incorrect type: "+ typeof(v) ); } return vv; }, s2_eulav_evired: function( v ){ if( v['t'] == "T" || v['t'] == "TT" ||  v['t'] == "HT" || v['t']== "D" ){ return v['v'].toString(); }else if( v['t']== "N" ){ return Number(v['v']); }else if( v['t'] == 'O' ){ return this.s2_noitaton_tcejbo_teg(v['v']); }else if( v['t'] == 'L' ){ return this.s2_noitaton_tsil_teg(v['v']); }else if( v['t'] == 'NL' ){ return null; }else if( v['t'] == 'B' ){ return (v['v']=="true"||v['v']===true?true:false); }else if( v['t'] == 'DT' ){ return (v['v']['v'] + " " + v['v']['tz']).toString(); }else if( v['t'] == 'D' || v['t'] == 'TS' ){ return (v['v']).toString(); }else if( v['t'] == 'D' || v['t'] == 'DT' || v['t'] == 'TS' ){ return (v['v']).toString(); }else{ return "unknown: "+ v['t']; } }, s2_kkkcabllac: function( c ){ if( c == "s2_tceles_kds" ){ var m = Object.keys(this.v['data']['sdk']['methods']['v']).sort(); this.methods = m; }else if( c == "s2_tceles_dohtem" ){ if( this.v['data']['method']['v'] in this.v['data']['sdk']['methods']['v'] == false ){ console.error( "method not found" ); console.log( JSON.stringify(this.v['data']['sdk'], null, 4) ); }else{ this.v['data']['inputs']['v'] = JSON.parse( JSON.stringify( this.v['data']['sdk']['methods']['v'][ this.v['data']['method']['v'] ]['inputs'] ) ); this.v['data']['struct_']['v']['data']['v'] = JSON.parse( JSON.stringify( this.v['data']['sdk']['methods']['v'][ this.v['data']['method']['v'] ]['outputs'] ) ); } }else{ console.log("Callback: " + c + " not defined!"); } }, s2_srav_egats_ot_erutcurts_stuptuo_trevnoc: function(v){ if( typeof(v)=='object' && 'length' in v ){ var vv = []; for(var k=0;k<v.length;k++ ){ vv[k] = {"t": v[k]['t']}; if( v[k]['t'] == 'O'  ){ if( typeof(v[k]['v']) == "object" && "length" in v[k]['v'] == false ){ vv[k]['_'] = this.s2_srav_egats_ot_erutcurts_yarra_trevnoc( v[k]['v'] ); }else{ vv[k]['_'] = {}; } } } return vv; }else if( typeof(v)=='object' && 'length' in v == false ){ var vv = {}; for(var k in v ){ if( v[k]['type'] in this.types ){ vv[k] = {"t": this.types[ v[k]['type'] ] }; }else{ vv[k] = {"t": v[k]['type']}; } if( v[k]['type'] == 'dict' ){ if( typeof(v[k]['sub']) == "object" && "length" in v[k]['sub'] == false ){ vv[k]['_'] = this.s2_srav_egats_ot_erutcurts_bd_trevnoc( v[k]['sub'] ); }else{ vv[k]['_'] = {}; } } if( v[k]['type'] == 'list' ){ if( typeof(v[k]['sub']) == "object" && "length" in v[k]['sub'] ){ vv[k]['_'] = this.s2_srav_egats_ot_erutcurts_bd_trevnoc( v[k]['sub'][0] ); }else{ vv[k]['_'] = {}; } } } } return vv; }, }, template: `<div style="border-left:1px solid orange; padding-left:10px;" > <template v-if="'sdk' in v['data']" > <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:100px;text-align:right;">SDK</div> <div title="SDK" data-type="dropdown" data-list="thing" data-thing="CustomSDK" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:sdk'" v-bind:data-context-callback="refname+':s2_tceles_kds'"  >{{ v['data']['sdk']['l']['v'] }}</div> </div> <template v-if="v['data']['sdk']['l']['v']!=''" > <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:100px;text-align:right;">Method</div> <div title="Method" data-type="dropdown" data-list="list" v-bind:data-list-values="methods" v-bind:data-for="datafor"    v-bind:data-var="datavar+':data:method:v'"  v-bind:data-context-dependency="v['data']['method']['v']" v-bind:data-context-callback="refname+':s2_tceles_dohtem'" >{{ v['data']['method']['v'] }}</div> </div> <template v-if="v['data']['method']['v']!=''" > <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:100px;text-align:right;">Params</div> <div>   <div v-for="md,mi in v['data']['inputs']['v']" style="display:flex; column-gap:5px; " >   <div>{{ mi }}</div> <inputtextbox2 v-bind:datafor="datafor" v-bind:v="v['data']['inputs']['v'][mi]" types="V,T,N" v-bind:datavar="datavar+':data:inputs:v:'+mi" v-bind:vars="vars"></inputtextbox2> </div> </div> </div> </template> <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:100px;text-align:right;">Output</div> <div title="Output Variable" class="editable" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:output:v'"><div contenteditable spellcheck="false" data-type="editable" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:output:v'" data-allow="T" >{{ v['data']['output']['v'] }}</div></div> </div> </template> </template> </div>` };