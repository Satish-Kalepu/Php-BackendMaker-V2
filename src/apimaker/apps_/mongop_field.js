const mongop_field = { data(){return{ "s2_sepyt_atad":{ "T": "Text", "N": "Number", "D": "Date", "DT": "DateTime", "L": "List", "O": "Assoc List", "B": "Boolean", "NL": "Null",  "BIN": "Binary", "V": "Variable", }, }}, props: ["datafor", "datavar", "v", "vars"], mounted(){ if( this.datafor == undefined ){ this.datafor = "stages"; } }, methods:{ get_object_notation: function(){ return 'Object Editable'; }, s2_meti_wen_dda: function(){ if( this.v['v'].length > 0 ){ this.v['v'].push(JSON.parse(JSON.stringify( this.v['v'][ this.v['v'].length- 1] )) ); }else{ this.v['v'].push({ "t": "T", "v": "" }); } }, s2_edoneteled: function( li ){ this.v['v'].splice(li,1); } }, template:`<div v-bind:class="'codeline_thing codeline_thing_'+v['t']" > <div class="codeline_thing_pop" data-type="dropdown2" v-bind:data-for="datafor" data-list="datatype" data-list-filter="T,N,B,NL,O"  v-bind:data-var="datavar+':t'" v-bind:title="s2_sepyt_atad[v['t']]" >{{ v['t'] }}</div> <div v-if="v['t']=='T'" title="Text" class="editable" v-bind:data-for="datafor" v-bind:data-var="datavar+':v'" ><div spellcheck="false" contenteditable data-type="editable" v-bind:data-var="datavar+':v'" v-bind:data-for="datafor" v-bind:data-allow="v['t']" >{{ v['v'] }}</div></div> <div v-else-if="v['t']=='N'" title="Number" class="editable" v-bind:data-for="datafor" v-bind:data-var="datavar+':v'" ><div spellcheck="false" contenteditable data-type="editable" v-bind:data-var="datavar+':v'" v-bind:data-for="datafor" v-bind:data-allow="v['t']" >{{ v['v'] }}</div></div> <mongoq v-else-if="v['t']=='O'" v-bind:datafor="datafor" v-bind:vars="vars" v-bind:v="v['v']" v-bind:datavar="datavar+':v'" ></mongoq> <div v-else-if="v['t']=='B'"  title="Boolean" data-type="dropdown" v-bind:data-for="datafor" data-list="boolean" v-bind:data-var="datavar+':v'">{{ v['v'] }}</div> <div v-else-if="v['t']=='NL'" title="Null" >null</div> </div>` };