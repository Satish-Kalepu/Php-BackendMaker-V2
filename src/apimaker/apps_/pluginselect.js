const pluginselect = { data(){return{ "v2": "", }}, props: ['datafor', "datavar", "v", "vars"], mounted(){ if( 'vs' in this.v == false ){ this.v['vs'] = false; } }, methods:{ find_o_sub_var: function( vv, vpath ){ try{ var x = vpath.split("->",1); var k = x[0]; if( k in vv ){ if( x.length > 1 ){ x.splice(0,1); if( vv[ k ]['t'] == "O" ){ return this.find_o_sub_var( vv[ k ]['_'], x.join("->") ); }else{ return false; } }else{ return true; } }else{ return false; } }catch(e){ console.log("vselect2: find_o_sub_var: " + vpath); } }, get_o_sub_var: function( vv, vpath ){ var x = vpath.split("->"); var k = x[0]; if( k in vv ){ if( x.length > 1 ){ x.splice(0,1); if( vv[ k ]['t'] == "O" ){ return this.get_o_sub_var( vv[ k ]['_'], x.join("->") ); }else{ return false; } }else{ return vv[ k ]; } }else{ return false; } }, }, template:`<div style="display:flex; align-items:flex-start;"> <pre>{{ v }}</pre> <div title="Plugin" data-type="dropdown" v-bind:data-for="datafor" data-list="plugins" v-bind:data-var="datavar+':v'" >{{ v['v'] }}</div> <template v-if="typeof(v['vs'])=='object'" > <div v-if="v['vs']['v']=='.'||v['vs']['v']==''" title="Properties or Methods" data-type="dropdown3" v-bind:data-for="datafor" class="varsubpre"  data-list="pluginsub" v-bind:var-for="v['v']" v-bind:data-var="datavar+':vs:v'" v-bind:data-var-parent="datavar" >{{ (v['vs']['v']?v['vs']['v']:'.') }}</div> <template v-else > <div title="Properties or Methods" data-type="dropdown" v-bind:data-for="datafor" class="varsub" data-list="pluginsub" v-bind:var-for="v['v']" v-bind:data-var="datavar+':vs:v'" v-bind:data-var-parent="datavar" >{{ v['vs']['v'] }}</div> <template v-if="'d' in v['vs']"> <template v-if="typeof(v['vs']['d'])&&'inputs' in v['vs']['d']"> <div>-&gt;</div> <div style="border:1px solid #ccc;"> <div v-for="pd,pi in v['vs']['d']['inputs']" style="display:flex;" > <div style="padding:0px 5px;min-width:100px;">{{ pd['n'] }}</div> <inputtextbox2 v-bind:v="pd['v']" v-bind:types="pd['types']" v-bind:datafor="datafor" v-bind:datavar="datavar+':vs:d:inputs:'+pi+':v'" ></inputtextbox2> </div> </div> </template> </template> </template> </template> </div>` };