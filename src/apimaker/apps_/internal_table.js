const internal_table =  { data(){ return { s2_meti_wen_dda: false, s2_eman_meti_wen: "", types: { "text": "T", "number": "N", "dict": "O", "list": "L", "boolean": "B", "null": "NL" }, } }, props: ['datafor', 'v','datavar', 'rootdata', 'refname', 'vars'], mounted: function(){ this.init(); }, watch: { v: { handler: function(){ this.$emit("updated"); }, deep:true } }, methods: { s2_ooooooohce: function(s2_vvvvvvvvvv){ if( typeof(s2_vvvvvvvvvv)=="object" ){ console.log( JSON.stringify(s2_vvvvvvvvvv,null,4) ); }else{ console.log( s2_vvvvvvvvvv ); } }, init: function(){ if( 'stage' in this.v['data'] ){ if( this.v['data']['stage'] == "initiate" ){ this.v['data'] = { "table":{"th":"Internal-Table", "i":{"t":"T","v":""}, "l":{"t":"T","v":""} }, "schema":{ "th":"Internal-Schema",  "i":{"t":"T","v":""}, "l":{"t":"T","v":""}, "fields":{"t":"O","v":{}}, "keys":{"t":"O","v":{}} }, "schema2": {}, "action":{"t":"T", "v":""}, "query":{"t":"MongoQ", "v":[{ "f":{"t":"T", "v":"field"}, "c":{"t":"T", "v":"="}, "v":{"t":"T", "v":"value"}, }]}, "project":{"t":"L", "v":[]}, "projects":{}, "set":{"t":"L", "v":[ { "f":{"t":"T", "v":"Field"}, "v":{"t":"T", "v":"Value"} } ]}, "insert":{"t":"O", "v":{ "_id": {"t":"T", "v":""} }}, "unset":{"t":"L", "v":[]}, "inc":{"t":"L", "v":[]}, "limit": {"t":"N", "v":"1"}, "sort":{"t":"L", "v":[]}, "upsert": {"t":"B", "v":false}, "hint": {"t":"T", "v":""}, "output": {"t":"T", "v":"dbResult"}, }; delete( this.v['data']['stage'] );  } } if( 'query' in this.v['data'] ){ if( this.v['data']['query']['t'] == "L" ){ this.v['data']['query']['t'] = "MongoQ"; } if( this.v['data']['query']['t'] != "V" ){ if( typeof(this.v['data']['query']['v']) == "object" && "length" in this.v['data']['query']['v'] == false ){ this.v['data']['query']['v'] = [{ "f":{"t":"T", "v":"field"}, "c":{"t":"T", "v":"="}, "v":{"t":"T", "v":"value"}, }]; } } } if( 'project' in this.v['data'] ){ if( typeof(this.v['data']['project']['v']) == "object" && "length" in this.v['data']['project']['v'] == false ){ this.v['data']['project']['v'] = []; } } if( 'set' in this.v['data'] ){ if( typeof(this.v['data']['set']['v']) == "object" && "length" in this.v['data']['set']['v'] == false ){ this.v['data']['set']['v'] = []; } } if( 'unset' in this.v['data'] ){ if( typeof(this.v['data']['unset']['v']) == "object" && "length" in this.v['data']['unset']['v'] == false ){ this.v['data']['unset']['v'] = []; } } if( 'inc' in this.v['data'] ){ if( typeof(this.v['data']['inc']['v']) == "object" && "length" in this.v['data']['inc']['v'] == false ){ this.v['data']['inc']['v'] = []; } } }, s2_noitaton_yreuq_teg( v ){  var vv = {}; if( typeof(v)=="object" ){ if( "length" in v){ for(var k=0;k<v.length;k++){ if( v[k]['c']['v'] == "==" || v[k]['c']['v'] == "=" ){ v[k]['c']['v'] = '$eq'; } if( v[k]['v']['t'] == "V" ){ vv[ v[k]['f']['v']+'' ] = {}; if( v[k]['v']['v']['t'] == "T" ){ vv[ v[k]['f']['v']+'' ][ v[k]['c']['v']+'' ] = v[k]['v']['t']+"["+v[k]['v']['v']['v']+']'; }else{ vv[ v[k]['f']['v']+'' ][ v[k]['c']['v']+'' ] = v[k]['v']['t']+"["+v[k]['v']['v']['v']+"]"; } }else if( v[k]['v']['t'] == "L" && ( v[k]['f']['v'] == '$and' || v[k]['f']['v'] == '$or' ) ){ vv[ v[k]['f']['v']+'' ] = []; for(var j=0;j<v[k]['v']['v'].length;j++){ vv[ v[k]['f']['v']+'' ].push( this.s2_noitaton_yreuq_teg(v[k]['v']['v'][j]['v']) ); } }else{ vv[ v[k]['f']['v']+'' ] = {}; if( v[k]['c']['v'] == '$eq' ){ vv[ v[k]['f']['v']+'' ] = this.s2_eulav_evired(v[k]['v']); }else{ vv[ v[k]['f']['v']+'' ][ v[k]['c']['v']+''] = this.s2_eulav_evired(v[k]['v']); } } } }else{ console.error("s2_noitaton_yreuq_teg: not a objectxx "); this.s2_ooooooohce( v); } }else{ console.error("s2_noitaton_yreuq_teg: incorrect type: "+ typeof(v) ); } return Object.fromEntries(Object.entries(vv).sort()); }, s2_noitaton_tcejbo_teg( v ){ var vv = {}; if( typeof(v)=="object" ){ if( "length" in v ){ for(var k=0;k<v.length;k++){ vv[ v[k]['f']['v'] ] = true; } }else{ console.error("get_object_notation: not a objectxx "); this.s2_ooooooohce( v); } }else{ console.error("get_object_notation: incorrect type: "+ typeof(v) ); } return Object.fromEntries(Object.entries(vv).sort()); }, s2_noitaton_tsil_teg( v ){ var vv = {}; if( typeof(v)=="object" && v != null ){ if( "length" in v ){ for(var k=0;k<v.length;k++){ if( 'f' in v[k] ){ vv[ v[k]['f']['v'] ] = true; } } }else{ console.error("s2_noitaton_tsil_teg: not a objectxx "); this.s2_ooooooohce( v); } }else{ console.error("s2_noitaton_tsil_teg: incorrect type: "+ typeof(v) ); } return vv; }, s2_noitaton_atad_teg( v ){ var vv = {}; if( typeof(v)=="object" && v != null ){ if( "length" in v ){ for(var k=0;k<v.length;k++){ if('f' in v[k] && 'v' in v[k] ){ if( v[k]['v']['t'] == "V" ){ vv[ v[k]['f']['v']+'' ] = v[k]['v']['t']+"["+v[k]['v']['v']['v']+']'; }else{ vv[ v[k]['f']['v']+'' ] = this.s2_eulav_evired(v[k]['v']); } } } }else{ console.error("s2_noitaton_atad_teg: not a objectxx "); this.s2_ooooooohce( v); } }else{ console.error("s2_noitaton_atad_teg: incorrect type: "+ typeof(v) ); } return vv; }, update_project_structure: function(){ var v = this.v['data']['project']['v']; var vv = {}; var only_false = true; for(var k=0;k<v.length;k++){ if( v[k]['v']['v'] == "true" ){ only_false = false; } vv[ v[k]['f']['v'] ] = {'t':this.types[ v[k]['t']['v'] ]}; } if( only_false ){ vv = JSON.parse( JSON.stringify( this.v['data']['schema2'] ) ); } this.v['data']['projects'] = vv; }, s2_noitaton_tcejorp_teg( v ){ var vv = {}; if( typeof(v)=="object" && v != null ){ if( "length" in v ){ for(var k=0;k<v.length;k++){ if( 'f' in v[k] && 'v' in v[k] ){ vv[ v[k]['f']['v'] ] = (v[k]['v']['v']=="true"||v[k]['v']['v']===true?true:false); } } }else{ console.error("s2_noitaton_tcejorp_teg: not a objectxx "); this.s2_ooooooohce( v); } }else{ console.error("s2_noitaton_tcejorp_teg: incorrect type: "+ typeof(v) ); } return vv; }, s2_noitaton_tros_teg( v ){ var vv = {}; if( typeof(v)=="object" && v != null ){ if( "length" in v ){ for(var k=0;k<v.length;k++){ if( 'f' in v[k] && 'v' in v[k] ){ vv[ v[k]['f']['v'] ] = (v[k]['v']['v']=="1"||v[k]['v']['v']===1?1:-1); } } }else{ console.error("s2_noitaton_tcejorp_teg: not a objectxx "); this.s2_ooooooohce( v); } }else{ console.error("s2_noitaton_tcejorp_teg: incorrect type: "+ typeof(v) ); } return vv; }, s2_eulav_evired: function( v ){ if( v['t'] == "T" || v['t'] == "TT" ||  v['t'] == "HT" || v['t']== "D" ){ return v['v'].toString(); }else if( v['t']== "N" ){ return Number(v['v']); }else if( v['t'] == 'O' ){ return this.s2_noitaton_tcejbo_teg(v['v']); }else if( v['t'] == 'L' ){ return this.s2_noitaton_tsil_teg(v['v']); }else if( v['t'] == 'NL' ){ return null; }else if( v['t'] == 'B' ){ return (v['v']=="true"||v['v']===true?true:false); }else if( v['t'] == 'DT' ){ return (v['v']['v'] + " " + v['v']['tz']).toString(); }else if( v['t'] == 'D' || v['t'] == 'TS' ){ return (v['v']).toString(); }else if( v['t'] == 'D' || v['t'] == 'DT' || v['t'] == 'TS' ){ return (v['v']).toString(); }else{ return "unknown: "+ v['t']; } }, s2_kkkcabllac: function( c ){ if( c == "s2_tes_amehcs" ){ this.s2_ooooooohce( this.v['data']['schema']['fields'] ); var k = this.v['data']['schema']['fields']['v']; var v = []; for(var i=0;i<k.length;i++){ v.push({ "f": { "t": "T", "v": k[i] }, "v": { "t": "T", "v": "" }, }); } var v2 = this.s2_etalpmet_nosj_ot_erutcurts_bd_trevnoc(this.v['data']['schema']['fields']['v']); this.s2_ooooooohce( v2 ); this.v['data']['set']['v'] = v; this.v['data']['insert']['v'] = v2; this.v['data']['schema2'] = this.s2_srav_egats_ot_erutcurts_bd_trevnoc(this.v['data']['schema']['fields']['v']); this.update_project_structure(); }else{ console.log("Callback: " + c + " not defined!"); } }, s2_srav_egats_ot_erutcurts_bd_trevnoc: function(v){ if( typeof(v)=='object' && 'length' in v ){ var vv = []; for(var k=0;k<v.length;k++ ){ vv[k] = {"t": v[k]['t']}; if( v[k]['t'] == 'O'  ){ if( typeof(v[k]['v']) == "object" && "length" in v[k]['v'] == false ){ vv[k]['_'] = this.s2_srav_egats_ot_erutcurts_yarra_trevnoc( v[k]['v'] ); }else{ vv[k]['_'] = {}; } } } return vv; }else if( typeof(v)=='object' && 'length' in v == false ){ var vv = {}; for(var k in v ){ if( v[k]['type'] in this.types ){ vv[k] = {"t": this.types[ v[k]['type'] ] }; }else{ vv[k] = {"t": v[k]['type']}; } if( v[k]['type'] == 'dict' ){ if( typeof(v[k]['sub']) == "object" && "length" in v[k]['sub'] == false ){ vv[k]['_'] = this.s2_srav_egats_ot_erutcurts_bd_trevnoc( v[k]['sub'] ); }else{ vv[k]['_'] = {}; } } if( v[k]['type'] == 'list' ){ if( typeof(v[k]['sub']) == "object" && "length" in v[k]['sub'] ){ vv[k]['_'] = this.s2_srav_egats_ot_erutcurts_bd_trevnoc( v[k]['sub'][0] ); }else{ vv[k]['_'] = {}; } } } } return vv; }, s2_etalpmet_nosj_ot_erutcurts_bd_trevnoc: function(v){ if( typeof(v)=='object' && 'length' in v ){ var vv = []; for(var k=0;k<v.length;k++ ){ if( typeof(v[k]) == "object" && "length" in v[k] == false ){ if( v[k]['type'] == "dict" ){ vv.push({"t":"O", "v": this.s2_etalpmet_nosj_ot_erutcurts_bd_trevnoc( v[k]['sub'] ) }); } } } return vv; }else if( typeof(v)=='object' && 'length' in v == false ){ var vv = {}; for(var k in v ){ if( v[k]['type'] in this.types ){ var vt = this.types[ v[k]['type'] ]; var val = ""; if( vt == "T" ){ val = ""; } else if( vt == "N" ){ val = 0; } else if( vt == "B" ){ val = false; } else if( vt == "O" ){  val = {}; if( typeof(v[k]['sub']) == "object" && "length" in v[k]['sub'] == false ){ val = this.s2_etalpmet_nosj_ot_erutcurts_bd_trevnoc( v[k]['sub'] ); } } else if( vt == "L" ){ val = []; if( typeof(v[k]['sub']) == "object" && "length" in v[k]['sub'] ){ val = this.s2_etalpmet_nosj_ot_erutcurts_bd_trevnoc( v[k]['sub'] ); } } else{ val = null; } }else{ var vt = this.types[ v[k]['type'] ]; var val = ""; } vv[k] = {"t": vt, "k": k, "v": val}; } } return vv; }, s2_2noitaton_tcejbo_teg: function( v ){ console.log("get_object_notation2: " ); console.log( v ); var vv = {}; if( typeof(v)==null ){ this.error("get_object_notation2: null "); }else if( typeof(v)=="object" ){ if( "length" in v == false ){ for(var k in v ){ if( v[k]['t'] == "V" ){ vv[ k ] = v[k]['t'] + "["+v[k]['v']['v']+"]"; if( 'vs' in v[k]['v'] ){ if( v[k]['v']['vs'] ){  if( v[k]['v']['vs']['v'] ){  vv[ k ] = vv[ k ] + '->' + v[k]['v']['vs']['v'];  } } } }else{ vv[ k ] = this.s2_2eulav_evired(v[k]); } } }else{ console.error("get_object_notation2: got list instead of object "); } }else{ console.error("get_object_notation2: incorrect type: "+ typeof(v) ); } return Object.fromEntries(Object.entries(vv).sort()); }, s2_2noitaton_tsil_teg: function( v ){ var vv = []; if( typeof(v)=="object" ){ if( "length" in v ){ for(var k=0;k< v.length;k++ ){ if( v[k]['t'] == "V" ){ nv = v[k]['t'] + "["+v[k]['v']['v']+"]"; if( 'vs' in v[k]['v'] ){ if( v[k]['v']['vs'] ){  if( v[k]['v']['vs']['v'] ){  nv = nv + '->' + v[k]['v']['vs']['v'];  } } } vv.push(nv); }else{ vv.push( this.s2_2eulav_evired(v[k]) ); } } }else{ console.error("get_list_notation2: not a list "); } }else{ console.error("get_list_notation2: incorrect type: "+ typeof(v) ); } return vv; }, s2_2eulav_evired: function( v ){ if( v['t'] == "T" || v['t'] == "TT" ||  v['t'] == "HT" || v['t']== "D" ){ return v['v'].toString(); }else if( v['t']== "N" ){ return Number(v['v']); }else if( v['t'] == 'O' ){ return this.s2_2noitaton_tcejbo_teg(v['v']); }else if( v['t'] == 'L' ){ return this.s2_2noitaton_tsil_teg(v['v']); }else if( v['t'] == 'NL' ){ return null; }else if( v['t'] == 'B' ){ return (v['v']?true:false); }else if( v['t'] == 'DT' ){ return (v['v']['v'] + " " + v['v']['tz']).toString(); }else if( v['t'] == 'D' || v['t'] == 'TS' ){ return (v['v']).toString(); }else if( v['t'] == 'D' || v['t'] == 'DT' || v['t'] == 'TS' ){ return (v['v']).toString(); }else{ return "unknown2: "+ v['t']; } } }, template: `<div style="border-left:1px solid orange; padding-left:10px;" > <template v-if="'table' in v['data']" > <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:100px;text-align:right;">Table</div> <div title="Collection" data-type="dropdown" data-list="thing" data-thing="Internal-Table" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:table'" >{{ v['data']['table']['l']['v'] }}</div> </div> <template v-if="v['data']['table']['l']['v']!=''" > <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:100px;text-align:right;">Schema</div> <div title="Schema" data-type="dropdown" data-list="thing" data-thing="Internal-Schema" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:schema'" v-bind:data-context-callback="refname+':s2_tes_amehcs'"  v-bind:data-context-dependency="v['data']['table']['i']['v']" >{{ v['data']['schema']['l']['v'] }}</div> </div> <template v-if="v['data']['schema']['l']['v']!=''" > <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:100px;text-align:right;">Action</div> <div title="Action" data-type="dropdown" data-list="list" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:action:v'" data-list-values="FindOne,FindMany,InsertOne,UpdateOne,UpdateMany,DeleteOne,DeleteMany" >{{ v['data']['action']['v'] }}</div> </div> <template v-if="v['data']['action']['v']!='InsertOne'&&v['data']['action']['v']!='InsertMany'&&v['data']['action']['v']!=''" > <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:100px;text-align:right;">Query</div> <inputtextbox2 v-bind:datafor="datafor" v-bind:v="v['data']['query']" types="V,MongoQ" v-bind:datavar="datavar+':data:query'" v-bind:vars="vars"></inputtextbox2> </div> </template> <template v-if="v['data']['action']['v']=='InsertOne'||v['data']['action']['v']=='InsertMany'" > <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:100px;text-align:right;">Document</div> <inputtextbox2 datafor="stages" v-bind:datavar="datavar+':data:insert'" v-bind:v="v['data']['insert']" types="O,V" v-bind:vars="vars" ></inputtextbox2> </div> </template> <template v-if="v['data']['action']['v']=='UpdateOne'||v['data']['action']['v']=='UpdateMany'" > <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:100px;text-align:right;">$set</div> <pre title="MongoDb Document" data-type="objecteditable" editable-type="MongoD"  editable-title="MongoDB Data $set" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:set:v'" style="margin-bottom:0px;" >{{ s2_noitaton_atad_teg(v['data']['set']['v']) }}</pre> </div> <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:100px;text-align:right;">$unSet</div> <pre title="MongoDb Document" data-type="objecteditable" editable-type="MongoD3"  editable-title="MongoDB Data $unSet" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:unset:v'" style="margin-bottom:0px;" >{{ s2_noitaton_atad_teg(v['data']['unset']['v']) }}</pre> </div> <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:100px;text-align:right;">$inc</div> <pre title="MongoDb Document" data-type="objecteditable" editable-type="MongoD2"  editable-title="MongoDB Data $inc" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:inc:v'" style="margin-bottom:0px;" >{{ s2_noitaton_atad_teg(v['data']['inc']['v']) }}</pre> </div> </template> <template v-if="v['data']['action']['v']=='FindOne'||v['data']['action']['v']=='FindMany'" > <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:100px;text-align:right;">Projection</div> <pre title="MongoDb Projection" data-type="objecteditable" editable-type="MongoP"  editable-title="MongoDB Data Projection" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:project:v'" style="margin-bottom:0px;" v-bind:data-ref="refname+'_project'" >{{ s2_noitaton_tcejorp_teg(v['data']['project']['v']) }}</pre> </div> <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:100px;text-align:right;">Sort</div> <pre title="MongoDb Sort" data-type="objecteditable" editable-type="MongoP2"  editable-title="MongoDB Sort Fields" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:sort:v'" style="margin-bottom:0px;" >{{ s2_noitaton_tros_teg(v['data']['sort']['v']) }}</pre> </div> </template> <template v-if="v['data']['action']['v']=='UpdateMany'||v['data']['action']['v']=='FindMany'||v['data']['action']['v']=='DeleteMany'" > <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:100px;text-align:right;">Limit</div> <div title="Number" class="editable" v-bind:data-var="datavar+':data:limit:v'" v-bind:data-for="datafor" ><div contenteditable spellcheck="false" data-type="editable" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:limit:v'" data-allow="N"  >{{ v['data']['limit']['v'] }}</div></div> </div> </template> </template> </template> <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:100px;text-align:right;">Output</div> <div title="Output Variable" class="editable" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:output:v'"><div contenteditable spellcheck="false" data-type="editable" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:output:v'" data-allow="T" >{{ v['data']['output']['v'] }}</div></div> </div> </template> </div>` };