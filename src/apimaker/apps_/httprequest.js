const httprequest =  { data(){ return { "schema": "https", } }, props: ['datafor', 'v','datavar', 'rootdata', 'refname', 'vars'], mounted: function(){ this.init(); }, watch: { v: { handler: function(){ this.$emit("updated"); }, deep:true } }, methods: { s2_ooooooohce: function(s2_vvvvvvvvvv){ if( typeof(s2_vvvvvvvvvv)=="object" ){ console.log( JSON.stringify(s2_vvvvvvvvvv,null,4) ); }else{ console.log( s2_vvvvvvvvvv ); } }, init: function(){ if( 'stage' in this.v['data'] ){ if( this.v['data']['stage'] == "initiate" ){ this.v['data'] = { "method":{"t":"T", "v":"GET"}, "url":{"t":"T", "v":"https://example.com/something.html"}, "content-type":{"t":"T", "v":"application/x-www-form-urlencoded"}, "auth":{ "type":{"t":"T", "v":"none"}, "user":{"t":"T", "v":""}, "pass":{"t":"T", "v":""}, }, "headers": {"t":"L", "v":[]}, "payload":{"t":"O", "v":{}}, "redirect":{"t":"N", "v":"No"}, "ctime":{"t":"N", "v":"1"}, "rtime":{"t":"N", "v":"5"}, "sslverify":{"t":"B", "v":"false"}, "twoway":{"t":"B", "v":"false"}, "sslcert":{"t":"TT", "v":""}, "sslkey":{"t":"TT", "v":""}, "useproxy":{"t":"T", "v":"No"}, "proxy":{"t":"O", "v":{ "host": {"t":"T", "v":"192.168.1.1"}, "port": {"t":"N", "v":"8080"}, "user": {"t":"T", "v":""}, "pass": {"t":"T", "v":""}, }}, "parse":{"t":"B", "v":"false"}, "output":{"t":"T", "v":"httpResponse"}, "struct": { "status":{"t":"N"}, "body":{"t":"T"}, "headers":{"t":"O", "_":{}}, "content_type": {"t":"T"}, "time_taken":{"t":"N"}, "size":{"t":"N"}, "error": {"t":"T"}, "cookies":{"t":"O","_":{}} } }; delete( this.v['data']['stage'] );  } } if( 'payload' in this.v['data'] ){ if( typeof(this.v['data']['payload']['v']) == "object" && "length" in this.v['data']['payload']['v'] ){ this.v['data']['payload']['v'] = {}; } } }, s2_noitaton_tcejbo_teg( v ){ var vv = {}; if( typeof(v)==null ){ console.error("get_object_notation: null "); }else if( typeof(v)=="object" ){ if( "length" in v == false ){ for(var k in v ){ if( v[k]['t'] == "V" ){ vv[ k ] = v[k]['t'] + "["+v[k]['v']['v']+"]"; if( 'vs' in v[k]['v'] ){ if( v[k]['v']['vs'] ){  if( v[k]['v']['vs']['v'] ){  vv[ k ] = vv[ k ] + '->' + v[k]['v']['vs']['v'];  } } } }else{ vv[ k ] = this.s2_eulav_evired(v[k]); } } }else{ console.error("get_object_notation: got list instead of object ..3.. "); this.s2_ooooooohce(v); } }else{ console.error("get_object_notation: incorrect type: "+ typeof(v) ); } return Object.fromEntries(Object.entries(vv).sort()); }, s2_noitaton_2tcejbo_teg( v ){ var vv = {}; if( typeof(v)=="object" ){ if( "length" in v ){ for(var k=0;k<v.length;k++){ if( v[k]['v']['t'] == "V" ){ vv[ v[k]['k']['v'] ] = "var["+v[k]['v']['v']['v']+"]"; }else{ vv[ v[k]['k']['v'] ] = this.s2_eulav_evired(v[k]['v']); } } }else{ console.error("get_object_notation: not a objectxx "); this.s2_ooooooohce( v); } }else{ console.error("get_object_notation: incorrect type: "+ typeof(v) ); } return vv; }, s2_noitaton_tsil_teg( v ){ var vv = {}; if( typeof(v)=="object" && v != null ){ if( "length" in v ){ for(var k=0;k<v.length;k++){ if( 'f' in v[k] ){ vv[ v[k]['f']['v'] ] = true; } } }else{ console.error("s2_noitaton_tsil_teg: not a objectxx "); this.s2_ooooooohce( v); } }else{ console.error("s2_noitaton_tsil_teg: incorrect type: "+ typeof(v) ); } return vv; }, s2_eulav_evired: function( v ){ if( v['t'] == "T" || v['t'] == "TT" ||  v['t'] == "HT" || v['t']== "D" ){ return v['v'].toString(); }else if( v['t']== "N" ){ return Number(v['v']); }else if( v['t'] == 'O' ){ return this.s2_noitaton_tcejbo_teg(v['v']); }else if( v['t'] == 'L' ){ return this.s2_noitaton_tsil_teg(v['v']); }else if( v['t'] == 'NL' ){ return null; }else if( v['t'] == 'B' ){ return (v['v']=="true"||v['v']===true?true:false); }else if( v['t'] == 'DT' ){ return (v['v']['v'] + " " + v['v']['tz']).toString(); }else if( v['t'] == 'D' || v['t'] == 'TS' ){ return (v['v']).toString(); }else if( v['t'] == 'D' || v['t'] == 'DT' || v['t'] == 'TS' ){ return (v['v']).toString(); }else{ return "unknown: "+ v['t']; } }, s2_kkkcabllac: function( c ){ if( c == "AuthType" ){  }else{ console.log("Callback: " + c + " not defined!"); } }, }, template: `<div style="border-left:1px solid orange; padding-left:10px;" > <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:150px;text-align:right;">Method</div> <div title="HTTP Method" v-bind:data-for="datafor" data-type="dropdown" data-list="list"  data-list-values="GET,POST,PUT" v-bind:data-var="datavar+':data:method:v'" >{{ v['data']['method']['v'] }}</div> </div> <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:150px;text-align:right;">URL</div> <inputtextbox2 v-bind:v="v['data']['url']" types="T,V" v-bind:datafor="datafor" v-bind:datavar="datavar+':data:url'" ></inputtextbox2> </div> <div v-if="v['data']['method']['v']=='POST'" style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:150px;text-align:right;">Content-Type</div> <div title="Content-Type" data-type="dropdown" v-bind:data-for="datafor" data-list="list"  data-list-values="application/x-www-form-urlencoded,application/json,application/xml,multipart/form-data" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:content-type:v'" >{{ v['data']['content-type']['v'] }}</div> </div> <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:150px;text-align:right;">Authorization</div> <div> <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div>Type</div> <div title="Authorization" data-type="dropdown" v-bind:data-for="datafor" data-list="list"  data-list-values="none,Basic,Bearer,Digest,HOBA,NTLM,SCRAM,AWS4-HMAC-SHA256" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:auth:type:v'" v-bind:data-context-callback="refname+':AuthType'" >{{ v['data']['auth']['type']['v'] }}</div> </div> <template v-if="v['data']['auth']['type']['v']=='Basic'" > <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div>User</div> <inputtextbox2 v-bind:v="v['data']['auth']['user']" types="T,V" v-bind:datafor="datafor" v-bind:datavar="datavar+':data:auth:user'" ></inputtextbox2> </div> <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div>Pass</div> <inputtextbox2  v-if="v['data']['auth']['type']['v']=='Basic'" v-bind:v="v['data']['auth']['pass']" types="T,V" v-bind:datafor="datafor" v-bind:datavar="datavar+':data:auth:pass'" ></inputtextbox2> </div> </template> <div v-else-if="v['data']['auth']['type']['v']!='none'">Unhandled</div> </div> </div> <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:150px;text-align:right;">Headers</div> <pre title="Request Headers" data-type="objecteditable" editable-type="O2" editable-title="Http Request Headers" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:headers:v'" data-suggest-list="User-Agent,WWW-Authenticate,Proxy-Authenticate,Authorization,Proxy-Authorization,Host,Referer,X-Forwarded-For,Cookie" style="margin-bottom:0px;" >{{ s2_noitaton_2tcejbo_teg(v['data']['headers']['v']) }}</pre> </div> <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:150px;text-align:right;"> <span v-if="v['data']['method']['v']=='GET'">QueryString</span> <span v-if="v['data']['method']['v']=='POST'">PayLoad</span> </div> <pre title="Request Payload" data-type="objecteditable" editable-type="O" editable-title="Http Request Payload" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:payload:v'"  style="margin-bottom:0px;" >{{ s2_noitaton_tcejbo_teg(v['data']['payload']['v']) }}</pre> </div> <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:150px;text-align:right;">Redirects</div> <div title="Follow Redirect" data-type="dropdown" v-bind:data-for="datafor" data-list="list" data-list-values="No,1,2,3" v-bind:data-var="datavar+':data:redirect:v'" >{{ v['data']['redirect']['v'] }}</div> </div> <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:150px;text-align:right;">Connect Timeout</div> <div title="Number" class="editable" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:ctime:v'" ><div contenteditable spellcheck="false" data-type="editable" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:ctime:v'" data-allow="N" >{{ v['data']['ctime']['v'] }}</div></div> </div> <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:150px;text-align:right;">Read Timeout</div> <div title="Number" class="editable" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:rtime:v'" ><div contenteditable spellcheck="false" data-type="editable" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:rtime:v'" data-allow="N" >{{ v['data']['rtime']['v'] }}</div></div> </div> <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:150px;text-align:right;">SSL Verify</div> <div title="SSL Verification" data-type="dropdown" v-bind:data-for="datafor" data-list="list" data-list-values="false,true" v-bind:data-var="datavar+':data:sslverify:v'" >{{ v['data']['sslverify']['v'] }}</div> </div> <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:150px;text-align:right;">Two Way SSL</div> <div title="Two Way SSL" data-type="dropdown" v-bind:data-for="datafor" data-list="list" data-list-values="false,true" v-bind:data-var="datavar+':data:twoway:v'" >{{ v['data']['twoway']['v'] }}</div> </div> <div v-if="v['data']['twoway']['v']=='true'" style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:150px;text-align:right;">SSL Certificate</div> <pre title="SSL Certificate" data-type="objecteditable"  editable-type="TT" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:sslcert:v'" style="margin-bottom:5px;" >{{ v['data']['sslcert']['v'] }}</pre> </div> <div v-if="v['data']['twoway']['v']=='true'" style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:150px;text-align:right;">SSL Key</div> <pre title="SSL Private Key" data-type="objecteditable"  editable-type="TT" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:sslkey:v'" style="margin-bottom:5px;" >{{ v['data']['sslkey']['v'] }}</pre> </div> <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:150px;text-align:right;">Use Proxy</div> <div title="Use Proxy" data-type="dropdown" v-bind:data-for="datafor" data-list="list" data-list-values="No,Http,Socks,Socks5" v-bind:data-var="datavar+':data:useproxy:v'" >{{ v['data']['useproxy']['v'] }}</div> </div> <div v-if="v['data']['useproxy']['v']!='No'" style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:150px;text-align:right;">Proxy Host</div> <div title="Text" class="editable" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:proxy:v:host:v'" ><div contenteditable spellcheck="false" data-type="editable" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:proxy:v:host:v'" data-allow="T" >{{ v['data']['proxy']['v']['host']['v'] }}</div></div> </div> <div v-if="v['data']['useproxy']['v']!='No'" style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:150px;text-align:right;">Proxy Port</div> <div title="Number" class="editable" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:proxy:port:v'" ><div contenteditable spellcheck="false" data-type="editable" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:proxy:v:port:v'" data-allow="N" >{{ v['data']['proxy']['v']['port']['v'] }}</div></div> </div> <div v-if="v['data']['useproxy']['v']=='Socks5'" style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:150px;text-align:right;">Proxy User</div> <div title="Text" class="editable" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:user:host:v'" ><div contenteditable spellcheck="false" data-type="editable" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:proxy:v:user:v'" data-allow="T" >{{ v['data']['proxy']['v']['user']['v'] }}</div></div> </div> <div v-if="v['data']['useproxy']['v']=='Socks5'" style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:150px;text-align:right;">Proxy Password</div> <div title="Text" class="editable" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:proxy:pass:v'" ><div contenteditable spellcheck="false" data-type="editable" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:proxy:v:pass:v'" data-allow="T" >{{ v['data']['proxy']['v']['pass']['v'] }}</div></div> </div> <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:150px;text-align:right;">Parse Response</div> <div title="Parse response Json/XML" data-type="dropdown" v-bind:data-for="datafor" data-list="list" data-list-values="false,true" v-bind:data-var="datavar+':data:parse:v'" >{{ v['data']['parse']['v'] }}</div> </div> <div style="display:flex; column-gap:5px; margin-bottom:5px;" > <div style="min-width:150px;text-align:right;">Output</div> <div title="Output Variable" class="editable" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:output:v'"><div contenteditable spellcheck="false" data-type="editable" v-bind:data-for="datafor" v-bind:data-var="datavar+':data:output:v'" data-allow="T" >{{ v['data']['output']['v'] }}</div></div> </div> </div>` };